<script>
  window.jQuery || document.write('<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"><\/script>')
</script>

{% assign EnableDisableMeta = shop.metafields.ACPTiered.EnableDisable %}{% assign enabledisablecheck = EnableDisableMeta %}{% if EnableDisableMeta contains 'true' %}{% assign enabledisablecheck = true %}{%elsif EnableDisableMeta contains 'false' %}{% assign enabledisablecheck = false %}{%endif%}

 {% if enabledisablecheck == true %}
{{ 'ac-style2.css' | asset_url | stylesheet_tag }}
<div style="display:none" id="ac-money-format">{{shop.money_format}}</div>
<style>
  @media only screen and (max-width: 600px) {
    #saved-banner-div {
      text-align: center;
    }
  }
 #saved-banner-div {
      text-align: end;
    }
.hs-rewards-content{
  display:none
}
</style>
<script type="text/javascript" defer>
  

      {% assign customerTag = '' %}
      var ACDiscountApp = ACDiscountApp || {};ACDiscountApp.Common = ACDiscountApp.Common || {};ACDiscountApp.CartPage = ACDiscountApp.CartPage || {};ACDiscountApp.PDPage = ACDiscountApp.PDPage || {};
  	  ACDiscountApp.Common.GlobalFields = function () {
      {% assign isCustomer = false %}this.isCustomer = false;this.customerTag = '';{% if customer %}{% assign isCustomer = true %} this.isCustomer = {{ isCustomer }}; {% for tag in customer.tags %}{% if tag contains "acp_" %}{% assign customerTag = tag %} {% break %}{% endif %} {% endfor %} this.customerTag = '{{customerTag}}';{% endif %}
      this.currency = '{{shop.currency}}';
	  this.formatMoney=function(b,g){if(typeof Shopify.formatMoney==="function"){return Shopify.formatMoney(b,g)}if(typeof b=="string"){b=b.replace(".","")}var f="";var e=/\{\{\s*(\w+)\s*\}\}/;var a=g||"${{amount}}";function c(h,i){return(typeof h=="undefined"?i:h)}function d(m,k,l,j){k=c(k,2);l=c(l,",");j=c(j,".");if(isNaN(m)||m==null){return 0}m=(m/100).toFixed(k);var n=m.split("."),i=n[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1"+l),h=n[1]?(j+n[1]):"";return i+h}switch(a.match(e)[1]){case"amount":f=d(b,2);break;case"amount_no_decimals":f=d(b,0);break;case"amount_with_comma_separator":f=d(b,2,".",",");break;case"amount_no_decimals_with_comma_separator":f=d(b,0,".",",");break}return a.replace(e,f)};
	  this.currencySymbol = (document.getElementById("ac-money-format").textContent).trim();this.currencySymbol = this.currencySymbol.split("}");this.currencySymbol = this.currencySymbol[2];
	  this.amount = (document.getElementById("ac-money-format").textContent).trim();
      
     
      var calcTime = function(offset_) {d_ = new Date();utc_ = d_.getTime() + (d_.getTimezoneOffset() * 60000);nd_ = new Date(utc_ + (3600000 * offset_));return Date.parse(nd_.getMonth()+ 1 +"/"+nd_.getDate()+"/"+ nd_.getFullYear() +" "+nd_.getHours()+":"+nd_.getMinutes());} 
      this.StartEndDateValid = function (startDate, endDate) { var isStrtDtVald_ = false; var isEndDtVald_ = false; var todayDate_ = calcTime(globalFields.settings.timezone); if (startDate != null) { var startDate_ = Date.parse(startDate); isStrtDtVald_ = todayDate_ >= startDate_; } else { isStrtDtVald_ = true; } if (endDate != null) { var endDate_ = Date.parse(endDate); isEndDtVald_ = todayDate_ <= endDate_; } else { isEndDtVald_ = true; }if (isStrtDtVald_ && isEndDtVald_) { return true; }else { return false; } }

      var TimercalcTime = function(offset_) {
        d_ = new Date();
        utc_ = d_.getTime() + (d_.getTimezoneOffset() * 60000);
        nd_ = new Date(utc_ + (3600000 * offset_));
        return Date.parse(nd_.getMonth()+ 1 +"/"+nd_.getDate()+"/"+ nd_.getFullYear() +" "+nd_.getHours()+":"+nd_.getMinutes());
      } 
      this.TimerStartEndDateValid = function (startDate, endDate) { 
        var isStrtDtVald_ = false; var isEndDtVald_ = false; 
        var todayDate_ = calcTime(globalFields.settings.timezone); 
        if (startDate != null) { var startDate_ = Date.parse(startDate); isStrtDtVald_ = todayDate_ >= startDate_; }
        else { isStrtDtVald_ = true; } 
        if (endDate != null) { var endDate_ = Date.parse(endDate); isEndDtVald_ = todayDate_ <= endDate_; }
        else { isEndDtVald_ = true; }
        if (isStrtDtVald_ && isEndDtVald_) { return {valid: true, start_date: startDate, end_date: endDate } }else { return {valid:false} } }
      
    this.GetTierObject = function (metafieldArray, variantId) { var obj = metafieldArray.tier !== undefined ? metafieldArray.tier : metafieldArray; if (obj.entity_type === "variants") {  var variantIndex = obj.variant_ids.indexOf(variantId.toString());  if (variantIndex !== -1) { var objToReturn = { entity_type: "variants", discount_type: obj.discount_type[variantIndex], status: obj.status[variantIndex], tier_min: obj.tier_min[variantIndex], tier_max: obj.tier_max[variantIndex], tier_values: obj.tier_values[variantIndex], start_date: obj.start_date[variantIndex], end_date: obj.end_date[variantIndex] }; return objToReturn; } else { return undefined; } } else { return obj; } }
  this.PageOption ='{{ template.name }}'
    this.ConvertToFixedDecimalString = function (amount) { return amount.toFixed(2); }

    this.ConvertToFixedDecimalNumber = function (amount) { return Number(amount.toFixed(2)); }
	{% if template.name == 'product' %} this.isProduct_Page = true; this.productId = '{{product.id}}'; {% endif %} {% assign isCartPage = false %} {% if template.name == 'cart' %} {% assign isCartPage = true %} {% endif %} this.isCartPage = {{ isCartPage }};  {% assign isProductPage = false %} {% if template.name == 'product' %} {% assign isProductPage = true %} {% endif %}  this.isProductPage = {{ isProductPage }}; {% assign tempSetting = shop.metafields.ACPTiered.Settings | default: 'undefined' | json %} {% if tempSetting contains 'error' %} this.settings = {{shop.metafields.ACPTiered.Settings.value | default: 'undefined' | json}}; {% else %} this.settings = {{shop.metafields.ACPTiered.Settings | default: 'undefined' | json}}; {% endif %} }

{% assign excluded_static_product_ids = "7310987198664, 0" %}      
      
ACDiscountApp.PDPage.Global = function () { 
this.variantsPriceArray_PD=[];
 {% assign checkAutTag = false %}
{% assign ProductTags = shop.metafields.ACPTiered.CustomerTiers.value | default: nil  %}
{% if ProductTags == null %}
{% assign ProductTags = shop.metafields.ACPTiered.CustomerTiers %}
{% endif %}
{% assign ProductTags =  ProductTags  | map: 'tag' %}        
{% assign _CustTags = customer.tags  %}
{% assign _ShopTags = shop.metafields.ACPTiered.Tags.value.Tags  %}
{% assign newCustomerTagList = '' %}
{% for _tag in _ShopTags %}
{% if _CustTags contains _tag %}
{% assign newCustomerTagList = newCustomerTagList | append: ',' | append: _tag %}
{% endif %}
{% endfor %}
{% assign newCustomerTagList = newCustomerTagList | split: ',' %}
{% for tag in newCustomerTagList %}   
{% if tag contains "acp_" %}
{%else%}
{% if ProductTags contains tag %}
{% assign checkAutTag = true %}
{%assign customerTag = tag %}
{%break%}
{% endif %}
{% endif %}                                     
{% endfor %}                  
{% if checkAutTag == false %}
{% for tag in customer.tags %}
{% if tag contains "acp_" %}
{% assign customerTag = tag %}
{% break %}
{% endif %}
{% endfor %} 
{% endif %}
  
{% assign tempCustomerTier = shop.metafields.ACPTiered.CustomerTiers | where: "tag", customerTag | default: nil  %};
{% if tempCustomerTier == null %}
{% assign tempCustomerTier = shop.metafields.ACPTiered.CustomerTiers.value | where: "tag", customerTag | default: nil  %}
{%endif%}
{% if excluded_static_product_ids contains product.id %}
    this.productMetafield = [];              
{% else %}
{% if customerTag != '' and tempCustomerTier %} 
	this.productMetafield = {{tempCustomerTier[0]['tier'] | json}};
{% else %}

 	{% assign productNormalTirers = shop.metafields.ACPTiered.NormalTiers[0] | default: "[]" | json %}
	{% if productNormalTirers contains '[]' %} 
	this.productMetafield = {{shop.metafields.ACPTiered.NormalTiers.value[0] | default: "[]" | json}};
	{% else %} 
	this.productMetafield = {{shop.metafields.ACPTiered.NormalTiers[0] | default: "[]" | json}};
	{% endif %}

{% endif %} 
{% endif %}
{% for variant in product.variants %} this.variantsPriceArray_PD[{{ variant.id }}]= {{ variant.price }};{% endfor %} 
}
    
ACDiscountApp.CartPage.Global = function () {
{% assign TierBasedOn = false %}
{% assign tempCustomerCartSubtotalTier = shop.metafields.ACPTiered.CustomerTiers | where: "tag", customerTag | default: nil  %}
{% if tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] != '' and  tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] != undefined and  tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] != null and tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] == 'Range of Quantities' %}
{% assign TierBasedOn = true %}
{% else %}
{% assign TierBasedOn = false %}
{% endif %}
{% if tempCustomerCartSubtotalTier == null %}
{% assign tempCustomerCartSubtotalTier = shop.metafields.ACPTiered.CustomerTiers.value | where: "tag", customerTag | default: nil  %}
{% if tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] != '' and  tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] != undefined and  tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] != null and tempCustomerCartSubtotalTier[0]['tier']['DiscountBasedOn'] == 'Range of Quantities' %}
{% assign TierBasedOn = true %}
{% else %}
{% assign TierBasedOn = false %}
{% endif %}
{%endif%}
   {% if customerTag != '' and tempCustomerCartSubtotalTier  and tempCustomerCartSubtotalTier[0]['tier']['status'] %} 
      {% assign excluded_collection_ids = tempCustomerCartSubtotalTier[0]['excluded_collection_ids'] | default: nil %}
      {% comment %}{% assign excluded_product_ids = tempCustomerCartSubtotalTier[0]['excluded_product_ids'] | default: nil %}{% endcomment %}
      this.excluded_collection_ids = {{excluded_collection_ids | json }}; 
      this.is_quantity_total = {{tempCustomerCartSubtotalTier[0]['is_quantity_total'] | default: TierBasedOn | json }};
      this.cartSubTotalMetafield = {{tempCustomerCartSubtotalTier[0]['tier'] | json}}; 
     {% else %}
      {% assign tempNormalCartSubtotalTier = shop.metafields.ACPTiered.NormalTiers[0] | default: nil %}   
      {% if tempNormalCartSubtotalTier['DiscountBasedOn'] != '' and  tempNormalCartSubtotalTier['DiscountBasedOn'] != undefined and  tempNormalCartSubtotalTier['DiscountBasedOn'] != null and tempNormalCartSubtotalTier['DiscountBasedOn'] == 'Range of Quantities' %}
      {% assign TierBasedOn = true %}
      {% else %}
      {% assign TierBasedOn = false %}
      {% endif %}
      {% if tempNormalCartSubtotalTier == null %}
      {% assign tempNormalCartSubtotalTier = shop.metafields.ACPTiered.NormalTiers.value[0] | default: nil %}
      {% if tempNormalCartSubtotalTier['DiscountBasedOn'] != '' and  tempNormalCartSubtotalTier['DiscountBasedOn'] != undefined and  tempNormalCartSubtotalTier['DiscountBasedOn'] != null and tempNormalCartSubtotalTier['DiscountBasedOn'] == 'Range of Quantities' %}
      {% assign TierBasedOn = true %}
      {% else %}
      {% assign TierBasedOn = false %}
      {% endif %}
      {% endif %}
      {% assign excluded_collection_ids = tempNormalCartSubtotalTier['excluded_collection_ids'] | default: nil %}
      {%comment%}{% assign excluded_product_ids = tempNormalCartSubtotalTier['excluded_product_ids'] | default: nil %}{%endcomment%}
      this.excluded_collection_ids = {{excluded_collection_ids | default: "[]" | json}}; 
      this.is_quantity_total = {{tempNormalCartSubtotalTier['is_quantity_total'] | default: TierBasedOn | json }};
   this.cartSubTotalMetafield = {{tempNormalCartSubtotalTier | default: "[]" | json}};
   {% endif %}
      this.cartObj= {{cart | json | default : 'undefined'}};
      {% capture results %}
      {% for item in cart.items %} 
      { 
        "item":{{item | json}},
          {% assign is_exclude_product = false  %} 
          {% for collectionId in excluded_collection_ids  %}
       {% assign isProductInCollection = item.product.collections | where: "id", collectionId | default: nil  %} 
           {% if isProductInCollection %}
          {% assign is_exclude_product = true  %} 
          {% break %}
          {% endif %}
          {% endfor %}
          
          {% assign staticProductInCollection = item.product.collections | where: "id", 0 | default: nil  %}
          {% assign staticProductInCollection = staticProductInCollection[0] %}
          {% if staticProductInCollection.id == 0 %}
          {% assign is_exclude_product = true  %} 
          {% endif %}
          
           {% for productId in excluded_product_ids  %} 
           {% if productId == item.product.id %}
          {% assign is_exclude_product = true  %} 
          {% break %}
          {% endif %}
          {% endfor %} 
          {% if excluded_static_product_ids contains item.product.id %}
          {% assign is_exclude_product = true  %}
          {% endif %}
          "is_exclude":{{is_exclude_product}} }
      {% unless forloop.last %},
        {% endunless %} 
        {% endfor %} 
        {% endcapture %}
        this.cartTiersArray = [{{results}}] 
    }
  	var globalFields = new ACDiscountApp.Common.GlobalFields();
  
</script>
<script type="text/javascript" src="{{ 'ac-tiered-sub-cart.js' | asset_url}}" defer></script>
<script type="text/javascript" src="{{ 'ac-tiered-sub-product.js' | asset_url}}" defer></script>
{% endif %}
{% include 'ac-add-ons' %}